
/*
DROP TABLE sync_hashes CASCADE CONSTRAINTS;
DROP TABLE sync_logs CASCADE CONSTRAINTS;
DROP TABLE sync_batches CASCADE CONSTRAINTS;
DROP TABLE sync_entities CASCADE CONSTRAINTS;
DROP TABLE sync_operations CASCADE CONSTRAINTS;
DROP TABLE sync_status CASCADE CONSTRAINTS;
*/


-- ========================================
-- Tabela de status
-- ========================================
CREATE TABLE sync_status (
    id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name   VARCHAR2(50) NOT NULL UNIQUE
);

INSERT INTO sync_status (name) VALUES ('SUCCESS'); -- 1
INSERT INTO sync_status (name) VALUES ('ERROR');   -- 2
COMMIT;

-- ========================================
-- Tabela de operações
-- ========================================
CREATE TABLE sync_operations (
    id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(50) NOT NULL UNIQUE
);

INSERT INTO sync_operations (name) VALUES ('INSERT'); -- 1
INSERT INTO sync_operations (name) VALUES ('UPDATE'); -- 2
INSERT INTO sync_operations (name) VALUES ('DELETE'); -- 3
COMMIT;

-- ========================================
-- Tabela de entidades
-- ========================================
CREATE TABLE sync_entities (
    id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL UNIQUE
);

INSERT INTO sync_entities (name) VALUES ('Product');
COMMIT;

-- ========================================
-- Batches de execução
-- ========================================
CREATE TABLE sync_batches (
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    start_time  TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    end_time    TIMESTAMP,
    status_id   NUMBER,
    CONSTRAINT fk_batch_status FOREIGN KEY (status_id) REFERENCES sync_status(id)
);

-- ========================================
-- Tabela de logs
-- ========================================
CREATE TABLE sync_logs (
    id           NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    batch_id     NUMBER NULL,
    entity_id    NUMBER NOT NULL,
    record_id    NUMBER NOT NULL,
    status_id    NUMBER NOT NULL,
    operation_id NUMBER NOT NULL,
    api_url      VARCHAR2(400) DEFAULT NULL,
    api_username VARCHAR2(100) DEFAULT NULL,
    message      VARCHAR2(4000),
    log_datetime TIMESTAMP DEFAULT SYSTIMESTAMP,
    payload      CLOB,
    hash_value   VARCHAR2(256) NOT NULL,

    CONSTRAINT fk_log_batch     FOREIGN KEY (batch_id)     REFERENCES sync_batches(id),
    CONSTRAINT fk_log_status    FOREIGN KEY (status_id)    REFERENCES sync_status(id),
    CONSTRAINT fk_log_operation FOREIGN KEY (operation_id) REFERENCES sync_operations(id),
    CONSTRAINT fk_log_entity    FOREIGN KEY (entity_id)    REFERENCES sync_entities(id)
);

-- Índices para otimizar buscas
CREATE INDEX idx_sync_log_status    ON sync_logs(status_id);
CREATE INDEX idx_sync_log_operation ON sync_logs(operation_id);
CREATE INDEX idx_sync_log_entity    ON sync_logs(entity_id);
CREATE INDEX idx_sync_log_hash      ON sync_logs(hash_value);

-- ========================================
-- Tabela de hashes
-- ========================================
CREATE TABLE sync_hashes (
    id             NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    entity_id      NUMBER NOT NULL,
    record_id      NUMBER NOT NULL,
    operation_id   NUMBER NOT NULL,
    hash_value     VARCHAR2(256) NOT NULL,
    operation_date TIMESTAMP DEFAULT SYSTIMESTAMP,

    -- Unique constraint
    CONSTRAINT uq_sync_hashes_entity_record UNIQUE (entity_id, record_id),

    -- Foreign keys
    CONSTRAINT fk_hash_entity    FOREIGN KEY (entity_id)    REFERENCES sync_entities(id),
    CONSTRAINT fk_hash_operation FOREIGN KEY (operation_id) REFERENCES sync_operations(id)
);

-- Índices para otimizar buscas
CREATE INDEX idx_sync_hashes_operation  ON sync_hashes(operation_id);
CREATE INDEX idx_sync_hashes_entity     ON sync_hashes(entity_id);
CREATE INDEX idx_sync_hashes_hash       ON sync_hashes(hash_value);
CREATE INDEX idx_sync_hashes_record_id  ON sync_hashes(record_id);

COMMIT;
