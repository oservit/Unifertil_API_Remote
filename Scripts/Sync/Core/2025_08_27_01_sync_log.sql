-- Tabela de status
CREATE TABLE sync_status (
    status_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name        VARCHAR2(50) NOT NULL UNIQUE
);

INSERT INTO sync_status (name) VALUES ('SUCCESS'); -- 1
INSERT INTO sync_status (name) VALUES ('ERROR');   -- 2
COMMIT;

-- Tabela de operações
CREATE TABLE sync_operations (
    operation_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name         VARCHAR2(50) NOT NULL UNIQUE
);

INSERT INTO sync_operations (name) VALUES ('INSERT'); -- 1
INSERT INTO sync_operations (name) VALUES ('UPDATE'); -- 2
INSERT INTO sync_operations (name) VALUES ('DELETE'); -- 3
COMMIT;

-- Tabela de entidades
CREATE TABLE sync_entities (
    entity_id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name         VARCHAR2(100) NOT NULL UNIQUE
);

INSERT INTO sync_entities (name) VALUES ('Product');
COMMIT;

-- Tabela de logs
CREATE TABLE sync_log (
    log_id        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    entity_id     NUMBER NOT NULL,
    record_id     NUMBER NOT NULL,
    status_id     NUMBER NOT NULL,
    operation_id  NUMBER NOT NULL,
    message       VARCHAR2(4000),
    log_datetime  TIMESTAMP DEFAULT SYSTIMESTAMP,
    payload       CLOB,
    hash_value    VARCHAR2(256) NOT NULL,

    CONSTRAINT fk_sync_log_status FOREIGN KEY (status_id) 
        REFERENCES sync_status(status_id),
    CONSTRAINT fk_sync_log_operation FOREIGN KEY (operation_id) 
        REFERENCES sync_operations(operation_id),
    CONSTRAINT fk_sync_log_entity FOREIGN KEY (entity_id) 
        REFERENCES sync_entities(entity_id)
);

-- Índices para otimizar buscas
CREATE INDEX idx_sync_log_status    ON sync_log(status_id);
CREATE INDEX idx_sync_log_operation ON sync_log(operation_id);
CREATE INDEX idx_sync_log_entity    ON sync_log(entity_id);
CREATE INDEX idx_sync_log_hash      ON sync_log(hash_value);

COMMIT;
