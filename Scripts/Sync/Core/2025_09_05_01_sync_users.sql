
/*
DROP TABLE sync_routes CASCADE CONSTRAINTS;
DROP TABLE sync_user_types CASCADE CONSTRAINTS;
DROP TABLE users CASCADE CONSTRAINTS;
DROP TABLE sync_nodes CASCADE CONSTRAINTS;
DROP TABLE sync_node_types CASCADE CONSTRAINTS;
COMMIT;
*/

-- ============================================
-- Node Types
-- ============================================
CREATE TABLE sync_node_types (
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name        VARCHAR2(50) NOT NULL,  -- 'Central' ou 'Remote'
    description VARCHAR2(200),
    CONSTRAINT uq_sync_node_types UNIQUE (name)
);

INSERT INTO sync_node_types (name, description) VALUES ('Central', 'Node central da rede');
INSERT INTO sync_node_types (name, description) VALUES ('Remote',  'Node remoto / filial');

-- ============================================
-- Nodes
-- ============================================
CREATE TABLE sync_nodes (
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name        VARCHAR2(100) NOT NULL,
    url         VARCHAR2(500) NOT NULL,
    type_id     NUMBER NOT NULL, -- FK para sync_node_types
    is_active   NUMBER(1) DEFAULT 1 NOT NULL,
    CONSTRAINT uq_sync_nodes_name UNIQUE (name),
    CONSTRAINT fk_sync_nodes_type FOREIGN KEY (type_id) REFERENCES sync_node_types(id)
);

-- ============================================
-- Users Types
-- ============================================
CREATE TABLE sync_user_types (
    id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(50) NOT NULL, -- 'SystemAdmin', 'SyncAPI', 'ExternalAPI', 'HumanUser'
    description VARCHAR2(200),
    CONSTRAINT uq_sync_user_types UNIQUE (name)
);

-- ============================================
-- Users
-- ============================================
CREATE TABLE users (
    id            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    type_id       NUMBER NOT NULL, -- FK para sync_user_types
    username      VARCHAR2(100) NOT NULL,
    password      VARCHAR2(500) NOT NULL,
    description   VARCHAR2(200), -- livre para anotações
    is_active     NUMBER(1) DEFAULT 1 NOT NULL,
    created_at    TIMESTAMP DEFAULT SYSTIMESTAMP,
    updated_at    TIMESTAMP,
    CONSTRAINT fk_users_type FOREIGN KEY (type_id) REFERENCES sync_user_types(id)
);

-- ============================================
-- Rotas
-- ============================================
CREATE TABLE sync_routes (
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    source_node_id  NUMBER NOT NULL,
    target_node_id  NUMBER NOT NULL,
    user_id         NUMBER NOT NULL,
    is_active       NUMBER(1) DEFAULT 1 NOT NULL,
    created_at      TIMESTAMP DEFAULT SYSTIMESTAMP,
    updated_at      TIMESTAMP,

    CONSTRAINT fk_sync_routes_source FOREIGN KEY (source_node_id) REFERENCES sync_nodes(id),
    CONSTRAINT fk_sync_routes_target FOREIGN KEY (target_node_id) REFERENCES sync_nodes(id),
    CONSTRAINT fk_sync_routes_user   FOREIGN KEY (user_id)        REFERENCES users(id),

    CONSTRAINT uq_sync_routes UNIQUE (source_node_id, target_node_id)
);

-- ============================================
-- View de rotas
-- ============================================
CREATE OR REPLACE VIEW sync_view_routes_users AS
SELECT 
    r.id            AS route_id,
    sns.name        AS source_node_name,
    sns.url         AS source_node_url,
    snt.name        AS target_node_name,
    snt.url         AS target_node_url,
    u.username      AS user_name,
    u.is_active     AS user_is_active,
    r.is_active     AS route_is_active,
    r.created_at    AS route_created_at,
    r.updated_at    AS route_updated_at
FROM sync_routes r
INNER JOIN sync_nodes sns ON r.source_node_id = sns.id
INNER JOIN sync_nodes snt ON r.target_node_id = snt.id
INNER JOIN users u  ON r.user_id = u.id
ORDER BY sns.name, snt.name;
